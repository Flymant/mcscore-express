<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>中国好声音 - 数据统计</title>
</head>
<body>
<style type="text/css">
    html, body {

        background-color: #2e2d2d;
        margin: 0;
        padding: 0;
        width: 100%;
        height: 100%;
    }

    .left {
        width: 100%;
        height: 100%;
        margin-right: -350px;
        float: left;
    }

    #container {
        height: 100%;
        margin-right: 350px;
    }

    #stat-container {
        width: 350px;
        height: 100%;
        float: right;
    }

    button {
        position: absolute;
        bottom: 10px;
    }

    #btn-switch {
        left: 50px;
    }

    #btn-save {
        left: 150px;
    }

</style>
<div class="left">
    <div id="container"></div>
</div>
<div id="stat-container"></div>
<button id="btn-switch" switch="on">停止刷新</button>
<button id="btn-save">保存数据</button>
<!--
<script type="text/javascript" src="http://cdn.hcharts.cn/jquery/jquery-1.8.3.min.js"></script>
<script type="text/javascript" src="http://cdn.hcharts.cn/highcharts/4.0.3/highcharts.js"></script>
<script type="text/javascript" src="http://cdn.hcharts.cn/highcharts/4.0.3/highcharts-3d.js"></script>
<script type="text/javascript" src="http://cdn.hcharts.cn/highcharts/4.0.3/modules/exporting.js"></script>
<script type="text/javascript" src="http://cdn.hcharts.cn/highcharts/4.0.3/themes/dark-unica.js"></script>
-->
<script type="text/javascript" src="/javascripts/lib/jquery-2.0.3.min.js"></script>
<script type="text/javascript" src="/javascripts/lib/highcharts/highcharts.js"></script>
<script type="text/javascript" src="/javascripts/lib/highcharts/highcharts-3d.js"></script>
<script type="text/javascript" src="/javascripts/lib/highcharts/modules/exporting.js"></script>
<script type="text/javascript" src="/javascripts/lib/highcharts/themes/dark-unica.js"></script>

<script type="text/javascript">
    Highcharts.setOptions({
        global: {
            useUTC: false
        }
    });

    var storage = window.sessionStorage;
    function Data(span, lineChartRender, statChartRender) {
        var self = this;
        this.span = span;
        this.dataPool = [];
        this.chart = new Highcharts.Chart({
            chart: {
                renderTo: lineChartRender,
                type: 'spline',
                animation: Highcharts.svg, // don't animate in old IE
                marginRight: 10,
            },
            subtitle: {
                text: "update in one minute"
            },
            xAxis: {
                type: "category",
                tickPixelInterval: 100,
                gridLineWidth: 1,
                labels: {
                    rotation: -25,
                    align: "right"
                }
            },
            exporting: {
                enabled: true
            },
            credits: {
                enabled: false
            },
            series: [{
                name: '在线用户数量'
            }]
        });

        this.statChart = new Highcharts.Chart({
            chart: {
                type: 'column',
                renderTo: statChartRender,
                margin: 75,
                options3d: {
                    enabled: true,
                    alpha: 10,
                    beta: 25,
                    depth: 70
                }
            },
            plotOptions: {
                column: {
                    depth: 25
                }
            },
            xAxis: {
                categories: ["Max", "Avg", "Min"]
            },
            yAxis: {
                opposite: true
            },
            series: [{
                name: 'Users Online',
                dataLabels: {
                    enabled: true
                }
            }]
        });

    }

    Data.prototype.MaxAvgMin = function() {
        var total = 0,
            maxIndex = 0,
            minIndex = 0,
            cur = 0;
        for(var m in this.dataPool) {
            cur = this.dataPool[m].online;
            total += cur;
            maxIndex = this.dataPool[maxIndex].online < cur ? m : maxIndex;
            minIndex = this.dataPool[minIndex].online > cur ? m : minIndex;
        }
        return {
                value: [
                    this.dataPool[maxIndex].online,
                    this.dataPool[minIndex].online,
                    parseInt(total/this.dataPool.length)
                ],
                indexes: {
                    max: maxIndex,
                    min: minIndex
                }
            };
    }


    Data.prototype.updateCurrentData = function() {
        var self = this;
        $.ajax({
            // url: "onlineCount",
            url: "http://mpphaproxyinpre.taobao.org:9999/getnum.do?appId=1016",
            dataType: "jsonp",
            type: "get",
            jsonp: "callback",
            success: function(res) {
                self.dataPool.push(res);
                storage.setItem(res.time, res.online);
                var date = res.time.split(" ")[0];
                res.time = res.time.split(" ")[1];
                self.chart.setTitle({text: date + "实时在线用户数量"});
                self.chart.series[0].addPoint([res.time, res.online], true, self.dataPool.length > self.span);

                var stat = self.MaxAvgMin();
                self.statChart.series[0].setData(stat.value);
                if(self.startPoint == null) self.startPoint = res.time;
                self.statChart.setTitle(
                                        {text: "statistics"},
                                        {text: "data between " + self.startPoint + "  and " + res.time}
                                    );

                self.statChart.xAxis[0].setCategories(["Max on " + self.dataPool[stat.indexes.max].time,
                                                        "Min on " + self.dataPool[stat.indexes.min].time,
                                                        "Average"]);

            },
            cache: false
        });
    }

    Data.prototype.saveData = function(callback) {
        storage.setItem("china-voice-online-count", JSON.stringify(this.dataPool));
        var stat = this.MaxAvgMin();
        var max = {time: this.dataPool[stat.indexes.max].time, online: stat.value[0]};
        storage.setItem("china-voice-online-max", JSON.stringify(max));


        callback();
    }

</script>

<script type="text/javascript">
    $(document).ready(function() {

        function init() {
            var data = new Data(30, "container", "stat-container");
            var interval = 1000 * 60; // one minute
            var repeat;
            data.updateCurrentData();

            var repeatRequest = function() {
                repeat = setInterval(function() {
                    data.updateCurrentData();
                }, interval);
            }
            repeatRequest();

            // bindEvent
            $("#btn-switch").on("click", function(){
                if($(this).attr("switch") == "on") {
                    $(this).text("开始刷新").attr("switch", "off");
                    clearInterval(repeat);
                }
                else {
                    $(this).text("停止刷新").attr("switch", "on");
                    repeatRequest();
                }
            });

            $("#btn-save").on("click", function() {
                data.saveData(function() {
                    alert("数据已保存！");
                });
            });
        }

        init();

    });
</script>

</body>
</html>
